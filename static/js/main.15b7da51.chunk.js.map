{"version":3,"sources":["pages/LoginPage.js","pages/SignupPage.js","pages/AllRecipesPage.js","pages/RecipeDetailPage.js","pages/CreateRecipePage.js","pages/SavedRecipesPage.js","components/Navbar.js","App.js","reportWebVitals.js","index.js"],"names":["LoginPage","formData","setFormData","useState","username","password","message","setMessage","handleChange","e","prev","target","name","value","React","createElement","className","onSubmit","async","preventDefault","response","fetch","method","headers","body","JSON","stringify","passwordHash","ok","data","json","localStorage","setItem","userId","errorMsg","text","error","console","type","placeholder","onChange","required","SignupPage","email","result","AllRecipesPage","recipes","setRecipes","navigate","useNavigate","useEffect","then","res","catch","err","length","map","recipe","key","recipeId","onClick","title","createdByUsername","Date","createdAt","toLocaleString","RecipeDetailPage","_recipe$ingredients","id","useParams","setRecipe","isSaved","setIsSaved","comments","setComments","newComment","setNewComment","parseInt","getItem","found","some","r","instructions","ingredients","Fragment","ing","i","trim","content","updated","rows","style","color","c","idx","user","CreateRecipePage","setIngredients","newIngredient","setNewIngredient","recipeData","createdByUserId","handleAddIngredient","trimmed","includes","SavedRecipesPage","savedRecipes","setSavedRecipes","item","_item$recipe","_item$recipe2","_item$recipe2$created","Link","to","createdBy","savedAt","Navbar","location","useLocation","pathname","App","Router","Routes","Route","path","element","reportWebVitals","onPerfEntry","Function","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.15b7da51.chunk.js","sourcesContent":["import React, { useState } from 'react';\r\nimport './LoginPage.css';\r\n\r\nexport default function LoginPage() {\r\n  const [formData, setFormData] = useState({\r\n    username: '',\r\n    password: '',\r\n  });\r\n\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n  \r\n    try {\r\n      const response = await fetch(\"https://pantrypal-backend-218e.onrender.com/api/login\", {\r\n        method: \"POST\",\r\n        headers: {\r\n          \"Content-Type\": \"application/json\",\r\n        },\r\n        body: JSON.stringify({\r\n          username: formData.username,\r\n          passwordHash: formData.password,\r\n        }),\r\n      });\r\n  \r\n      if (response.ok) {\r\n        const data = await response.json();\r\n        localStorage.setItem(\"userId\", data.userId);\r\n        localStorage.setItem(\"username\", data.username);\r\n        setMessage(data.message); // \"Login successful\"\r\n      } else {\r\n        const errorMsg = await response.text();\r\n        setMessage(errorMsg);\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Login failed:\", error);\r\n      setMessage(\"An error occurred. Please try again.\");\r\n    }\r\n  };  \r\n\r\n  return (\r\n    <div className=\"login-container\">\r\n      <h2>Login</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          placeholder=\"Username\"\r\n          value={formData.username}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          value={formData.password}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <button type=\"submit\">Login</button>\r\n      </form>\r\n      {message && <p className=\"login-message\">{message}</p>}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport './SignupPage.css';\r\n\r\nexport default function SignupPage() {\r\n  const [formData, setFormData] = useState({\r\n    username: '',\r\n    email: '',\r\n    password: '',\r\n  });\r\n\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    try {\r\n      const response = await fetch('http://pantrypal-backend-218e.onrender.com/api/signup', {\r\n        method: 'POST',\r\n        headers: {\r\n          'Content-Type': 'application/json',\r\n        },\r\n        body: JSON.stringify({\r\n          username: formData.username,\r\n          email: formData.email,\r\n          passwordHash: formData.password,\r\n        }),\r\n      });\r\n\r\n      const result = await response.text();\r\n      setMessage(result);\r\n    } catch (error) {\r\n      console.error('Signup failed:', error);\r\n      setMessage('An error occurred. Please try again.');\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"signup-container\">\r\n      <h2>Sign Up</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"username\"\r\n          placeholder=\"Username\"\r\n          value={formData.username}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"email\"\r\n          name=\"email\"\r\n          placeholder=\"Email\"\r\n          value={formData.email}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <input\r\n          type=\"password\"\r\n          name=\"password\"\r\n          placeholder=\"Password\"\r\n          value={formData.password}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <button type=\"submit\">Sign Up</button>\r\n      </form>\r\n      {message && <p className=\"signup-message\">{message}</p>}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport './AllRecipesPage.css';\r\n\r\nexport default function AllRecipesPage() {\r\n  const [recipes, setRecipes] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    fetch('https://pantrypal-backend-218e.onrender.com/api/recipes')\r\n      .then(res => res.json())\r\n      .then(data => setRecipes(data))\r\n      .catch(err => console.error('Failed to fetch recipes:', err));\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"recipes-container\">\r\n      <h2>All Recipes</h2>\r\n      {recipes.length === 0 ? (\r\n        <p>No recipes found.</p>\r\n      ) : (\r\n        <ul className=\"recipe-list\">\r\n          {recipes.map(recipe => (\r\n            <li\r\n              key={recipe.recipeId}\r\n              className=\"recipe-card\"\r\n              onClick={() => navigate(`/recipes/${recipe.recipeId}`)}\r\n            >\r\n              <h3>{recipe.title}</h3>\r\n              <p><strong>Created by:</strong> {recipe.createdByUsername || 'Unknown'}</p>\r\n              <p><strong>Created at:</strong> {new Date(recipe.createdAt).toLocaleString()}</p>\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","// src/pages/RecipeDetailPage.js\r\nimport React, { useEffect, useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport './RecipeDetailPage.css';\r\n\r\nexport default function RecipeDetailPage() {\r\n  const { id } = useParams();\r\n  const [recipe, setRecipe] = useState(null);\r\n  const [isSaved, setIsSaved] = useState(false);\r\n  const [message, setMessage] = useState('');\r\n  const [comments, setComments] = useState([]);\r\n  const [newComment, setNewComment] = useState('');\r\n\r\n  const userId = parseInt(localStorage.getItem(\"userId\"));\r\n\r\n  useEffect(() => {\r\n    // Fetch recipe details\r\n    fetch(`https://pantrypal-backend-218e.onrender.com/api/recipes/${id}`)\r\n      .then(res => res.json())\r\n      .then(data => setRecipe(data))\r\n      .catch(err => console.error(\"Error fetching recipe:\", err));\r\n\r\n    // Fetch saved status\r\n    if (userId) {\r\n      fetch(`https://pantrypal-backend-218e.onrender.com/api/saved/user/${userId}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          const found = data.some(r => r.recipe.recipeId === parseInt(id));\r\n          setIsSaved(found);\r\n        })\r\n        .catch(err => console.error(\"Error checking saved status:\", err));\r\n    }\r\n\r\n    // Fetch comments\r\n    fetch(`https://pantrypal-backend-218e.onrender.com/api/comments/recipe/${id}`)\r\n      .then(res => res.json())\r\n      .then(data => setComments(data))\r\n      .catch(err => console.error(\"Error fetching comments:\", err));\r\n  }, [id, userId]);\r\n\r\n  const handleSaveToggle = async () => {\r\n    const endpoint = 'https://pantrypal-backend-218e.onrender.com/api/saved';\r\n    const body = { userId, recipeId: parseInt(id) };\r\n\r\n    try {\r\n      const response = await fetch(endpoint, {\r\n        method: isSaved ? 'DELETE' : 'POST',\r\n        headers: { 'Content-Type': 'application/json' },\r\n        body: JSON.stringify(body)\r\n      });\r\n\r\n      const text = await response.text();\r\n      setMessage(text);\r\n      setIsSaved(!isSaved);\r\n    } catch (error) {\r\n      console.error('Save toggle failed:', error);\r\n      setMessage('Something went wrong.');\r\n    }\r\n  };\r\n\r\n  const handleCommentSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    if (!newComment.trim()) return;\r\n\r\n    const body = {\r\n      userId,\r\n      recipeId: parseInt(id),\r\n      content: newComment\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(\"https://pantrypal-backend-218e.onrender.com/api/comments\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(body)\r\n      });\r\n\r\n      const text = await response.text();\r\n      setMessage(text);\r\n      setNewComment('');\r\n\r\n      // Re-fetch comments\r\n      const updated = await fetch(`https://pantrypal-backend-218e.onrender.com/api/comments/recipe/${id}`).then(res => res.json());\r\n      setComments(updated);\r\n    } catch (err) {\r\n      console.error(\"Comment submission failed:\", err);\r\n      setMessage(\"Could not post comment.\");\r\n    }\r\n  };\r\n\r\n  if (!recipe) return <div className=\"detail-container\">Loading...</div>;\r\n\r\n  return (\r\n    <div className=\"detail-container\">\r\n      <h2>{recipe.title}</h2>\r\n      <p><strong>Instructions:</strong></p>\r\n      <p>{recipe.instructions}</p>\r\n      <p><strong>Created by:</strong> {recipe.createdByUsername}</p>\r\n      <p className=\"timestamp\"><strong>Created at:</strong> {new Date(recipe.createdAt).toLocaleString()}</p>\r\n\r\n      {recipe.ingredients?.length > 0 && (\r\n        <>\r\n          <p><strong>Ingredients:</strong></p>\r\n          <ul>\r\n            {recipe.ingredients.map((ing, i) => (\r\n              <li key={i}>{ing}</li>\r\n            ))}\r\n          </ul>\r\n        </>\r\n      )}\r\n\r\n      {userId ? (\r\n        <>\r\n          <button onClick={handleSaveToggle}>\r\n            {isSaved ? 'Unsave Recipe' : 'Save Recipe'}\r\n          </button>\r\n\r\n          <form onSubmit={handleCommentSubmit} className=\"comment-form\">\r\n            <textarea\r\n              value={newComment}\r\n              onChange={(e) => setNewComment(e.target.value)}\r\n              placeholder=\"Write a comment...\"\r\n              rows=\"3\"\r\n              required\r\n            />\r\n            <button type=\"submit\">Post Comment</button>\r\n          </form>\r\n        </>\r\n      ) : (\r\n        <p style={{ color: 'red' }}>Log in to save and comment on this recipe.</p>\r\n      )}\r\n\r\n      {message && <p className=\"save-message\">{message}</p>}\r\n\r\n      <div className=\"comments-section\">\r\n        <h3>Comments</h3>\r\n        {comments.length === 0 ? (\r\n          <p>No comments yet.</p>\r\n        ) : (\r\n          <ul className=\"comment-list\">\r\n            {comments.map((c, idx) => (\r\n              <li key={idx}>\r\n                <strong>{c.user.username}</strong>: {c.content}\r\n              </li>\r\n            ))}\r\n          </ul>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState } from 'react';\r\nimport './CreateRecipePage.css';\r\n\r\nexport default function CreateRecipePage() {\r\n  const [formData, setFormData] = useState({\r\n    title: '',\r\n    instructions: '',\r\n  });\r\n\r\n  const [ingredients, setIngredients] = useState([]);\r\n  const [newIngredient, setNewIngredient] = useState('');\r\n  const [message, setMessage] = useState('');\r\n\r\n  const handleChange = (e) => {\r\n    setFormData((prev) => ({\r\n      ...prev,\r\n      [e.target.name]: e.target.value,\r\n    }));\r\n  };\r\n\r\n  const handleAddIngredient = () => {\r\n    const trimmed = newIngredient.trim();\r\n    if (trimmed && !ingredients.includes(trimmed)) {\r\n      setIngredients((prev) => [...prev, trimmed]);\r\n      setNewIngredient('');\r\n    }\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n\r\n    const userId = parseInt(localStorage.getItem(\"userId\"));\r\n    if (!userId) {\r\n      setMessage(\"Please log in to submit a recipe.\");\r\n      return;\r\n    }\r\n\r\n    const recipeData = {\r\n      ...formData,\r\n      createdByUserId: userId,\r\n      ingredients,\r\n    };\r\n\r\n    try {\r\n      const response = await fetch(\"https://pantrypal-backend-218e.onrender.com/api/recipes\", {\r\n        method: \"POST\",\r\n        headers: { \"Content-Type\": \"application/json\" },\r\n        body: JSON.stringify(recipeData),\r\n      });\r\n\r\n      const text = await response.text();\r\n      setMessage(text);\r\n      if (response.ok) {\r\n        setFormData({ title: '', instructions: '' });\r\n        setIngredients([]);\r\n      }\r\n    } catch (err) {\r\n      console.error(\"Error creating recipe:\", err);\r\n      setMessage(\"Something went wrong.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"create-recipe-container\">\r\n      <h2>Create a Recipe</h2>\r\n      <form onSubmit={handleSubmit}>\r\n        <input\r\n          type=\"text\"\r\n          name=\"title\"\r\n          placeholder=\"Recipe Title\"\r\n          value={formData.title}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n        <textarea\r\n          name=\"instructions\"\r\n          placeholder=\"Instructions\"\r\n          value={formData.instructions}\r\n          onChange={handleChange}\r\n          required\r\n        />\r\n\r\n        <div className=\"ingredient-input-group\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Add ingredient\"\r\n            value={newIngredient}\r\n            onChange={(e) => setNewIngredient(e.target.value)}\r\n          />\r\n          <button type=\"button\" onClick={handleAddIngredient}>Add</button>\r\n        </div>\r\n\r\n        {ingredients.length > 0 && (\r\n          <ul className=\"ingredient-list\">\r\n            {ingredients.map((ing, idx) => <li key={idx}>{ing}</li>)}\r\n          </ul>\r\n        )}\r\n\r\n        <button type=\"submit\">Submit Recipe</button>\r\n      </form>\r\n      {message && <p className=\"create-recipe-message\">{message}</p>}\r\n    </div>\r\n  );\r\n}\r\n","import React, { useEffect, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport './SavedRecipesPage.css';\r\n\r\nexport default function SavedRecipesPage() {\r\n  const [savedRecipes, setSavedRecipes] = useState([]);\r\n  const userId = parseInt(localStorage.getItem(\"userId\"));\r\n\r\n  useEffect(() => {\r\n    if (!userId) return;\r\n    fetch(`https://pantrypal-backend-218e.onrender.com/api/saved/user/${userId}`)\r\n      .then((res) => res.json())\r\n      .then((data) => setSavedRecipes(data))\r\n      .catch((err) => console.error('Error fetching saved recipes:', err));\r\n  }, [userId]);\r\n\r\n  if (!userId) {\r\n    return (\r\n      <div className=\"saved-recipes-container\">\r\n        <h2>Saved Recipes</h2>\r\n        <p>Please log in to view your saved recipes.</p>\r\n      </div>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <div className=\"saved-recipes-container\">\r\n      <h2>Saved Recipes</h2>\r\n      {savedRecipes.length === 0 ? (\r\n        <p>No saved recipes.</p>\r\n      ) : (\r\n        <ul className=\"saved-recipe-list\">\r\n          {savedRecipes.map((item, idx) => (\r\n            <Link\r\n              key={idx}\r\n              to={`/recipes/${item.recipe.recipeId}`}\r\n              className=\"saved-recipe-card-link\"\r\n            >\r\n              <li className=\"saved-recipe-card\">\r\n                <h3>{item.recipe?.title}</h3>\r\n                <p><strong>Created by:</strong> {item.recipe?.createdBy?.username}</p>\r\n                <p><strong>Saved on:</strong> {new Date(item.savedAt).toLocaleString()}</p>\r\n              </li>\r\n            </Link>\r\n          ))}\r\n        </ul>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { Link, useLocation } from 'react-router-dom';\r\nimport './Navbar.css';\r\n\r\nexport default function Navbar() {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <nav className=\"navbar\">\r\n      <div className=\"navbar-logo\">PantryPal</div>\r\n      <div className=\"navbar-links\">\r\n        <Link to=\"/\" className={location.pathname === '/' ? 'active' : ''}>All Recipes</Link>\r\n        <Link to=\"/create\" className={location.pathname === '/create' ? 'active' : ''}>Create</Link>\r\n        <Link to=\"/saved\" className={location.pathname === '/saved' ? 'active' : ''}>Saved</Link>\r\n        <Link to=\"/signup\" className={location.pathname === '/signup' ? 'active' : ''}>Sign Up</Link>\r\n        <Link to=\"/login\" className={location.pathname === '/login' ? 'active' : ''}>Login</Link>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport { BrowserRouter as Router, Routes, Route } from 'react-router-dom';\r\nimport LoginPage from './pages/LoginPage';\r\nimport SignupPage from './pages/SignupPage';\r\nimport AllRecipesPage from './pages/AllRecipesPage';\r\nimport RecipeDetailPage from './pages/RecipeDetailPage';\r\nimport CreateRecipePage from './pages/CreateRecipePage';\r\nimport SavedRecipesPage from './pages/SavedRecipesPage';\r\nimport Navbar from './components/Navbar';\r\n\r\nfunction App() {\r\n  return (\r\n    <Router>\r\n      <Navbar />\r\n      <Routes>\r\n        <Route path=\"/\" element={<AllRecipesPage />} />\r\n        <Route path=\"/login\" element={<LoginPage />} />\r\n        <Route path=\"/signup\" element={<SignupPage />} />\r\n        <Route path=\"/recipes/:id\" element={<RecipeDetailPage />} />\r\n        <Route path=\"/create\" element={<CreateRecipePage />} />\r\n        <Route path=\"/saved\" element={<SavedRecipesPage />} />\r\n      </Routes>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","const reportWebVitals = onPerfEntry => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom/client';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nconst root = ReactDOM.createRoot(document.getElementById('root'));\r\nroot.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}